% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/tokenize_sentences.R
\name{tknz_sent}
\alias{tknz_sent}
\title{Sentence tokenizer}
\usage{
tknz_sent(input, EOS = "[.?!:;]+", keep_first = FALSE)
}
\arguments{
\item{input}{a character vector.}

\item{EOS}{a regular expression matching an End-Of-Sentence delimiter.}

\item{keep_first}{TRUE or FALSE? Should the first character of the matches
be appended to the returned sentences (with a space)?}
}
\value{
a character vector, each entry of which corresponds to a single
sentence.
}
\description{
Extract sentences from a batch of text lines.
}
\details{
\code{tknz_sent()} splits text into sentences using a list of
single character delimiters, specified by the parameter \code{EOS}.
Specifically, when an EOS token is found, the next sentence begins at the
first position in the input string not containing any of the EOS tokens
\emph{or white space} (so that entries like \code{"Hi there!!!"} or
\code{"Hello . . ."} are both recognized as a single sentence).

If \code{keep_first} is \code{FALSE}, the delimiters are stripped off from
the returned sequences, which means that all delimiters are treated
symmetrically.

In the absence of any \code{EOS} delimiter, \code{tknz_sent()}
returns the input as is, since parts of text corresponding to different
entries of the input vector \code{x} are understood as parts of separate
sentences.
}
\examples{
tknz_sent("Hi there! I'm using `sbo`.")
}
\author{
Valerio Gherardi
}
